{"version":3,"sources":["components/TrayWidget.jsx","components/TrayItemWidget.jsx","components/BodyWidget.jsx","Application.js","index.js"],"names":["TrayWidget","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react","className","children","React","TrayItemWidget","_this2","mdbreact","outline","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","model","name","BodyWidget","TrayWidget_TrayWidget","TrayItemWidget_TrayItemWidget","type","color","onDrop","data","parse","getData","nodesCount","_","app","getDiagramEngine","getDiagramModel","getNodes","length","node","DefaultNodeModel","addInPort","addOutPort","points","getRelativeMousePoint","x","y","addNode","forceUpdate","onDragOver","preventDefault","main","diagramEngine","Application","SRD","installDefaultFactories","body","BodyWidget_BodyWidget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.442edd4a.chunk.js","sourcesContent":["import * as React from \"react\";\n\n/**\n * @author Dylan Vorster\n */\nexport class TrayWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return <div className=\"tray\">\n      {this.props.children}\n    </div>;\n  }\n}\n","import * as React from \"react\";\nimport { MDBBtn } from \"mdbreact\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nexport class TrayItemWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <MDBBtn outline\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData(\"storm-diagram-node\", JSON.stringify(this.props.model));\n        }}\n      >\n        {this.props.name}\n      </MDBBtn>\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { TrayWidget } from \"./TrayWidget\";\nimport { TrayItemWidget } from \"./TrayItemWidget\";\nimport { DefaultNodeModel, DiagramWidget } from \"storm-react-diagrams\";\n\n/**\n * @author Dylan Vorster\n */\nexport class BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div className=\"content\">\n          <TrayWidget>\n            <TrayItemWidget model={{ type: \"in\" }} name=\"In Node\" color=\"rgb(192,255,0)\" />\n            <TrayItemWidget model={{ type: \"out\" }} name=\"Out Node\" color=\"rgb(0,192,255)\" />\n          </TrayWidget>\n          <div\n            className=\"diagram-layer\"\n            onDrop={event => {\n              var data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n              var nodesCount = _.keys(\n                this.props.app\n                  .getDiagramEngine()\n                  .getDiagramModel()\n                  .getNodes()\n              ).length;\n\n              var node = null;\n              if (data.type === \"in\") {\n                node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(192,255,0)\");\n                node.addInPort(\"In\");\n              } else {\n                node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n                node.addOutPort(\"Out\");\n              }\n\n              var points = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n              node.x = points.x;\n              node.y = points.y;\n              this.props.app\n                .getDiagramEngine()\n                .getDiagramModel()\n                .addNode(node);\n              this.forceUpdate();\n            }}\n            onDragOver={event => {\n              event.preventDefault();\n            }}\n          >\n            <DiagramWidget className=\"srd-demo-canvas\" diagramEngine={this.props.app.getDiagramEngine()} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as SRD from \"storm-react-diagrams\";\n\n/**\n * @author Dylan Vorster\n */\nexport class Application {\n  constructor() {\n    this.diagramEngine = new SRD.DiagramEngine();\n    this.diagramEngine.installDefaultFactories();\n\n  }\n\n  getDiagramEngine() {\n    return this.diagramEngine;\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport { BodyWidget } from \"./components/BodyWidget\";\nimport { Application } from \"./Application\";\n\nimport \"./sass/main.scss\";\n\nvar app = new Application();\nvar body = <BodyWidget app={app} />;\nReactDOM.render(body, document.getElementById('root'));\n"],"sourceRoot":""}